version: '3'
services:
  server:
    image: node:16
    container_name: kafka_example_server
    volumes:
      - ./server.ts:/server.ts
      - ./utils.ts:/utils.ts
      - ./events.ts:/events.ts
      - ./node_modules:/node_modules
      - ./tsconfig.json:/tsconfig.json
      - ./package.json:/package.json
    ports:
      - '3000:3000'
    working_dir: /
    command: npx ts-node-dev server.ts

  price:
    image: node:16
    container_name: kafka_example_price
    volumes:
      - ./price.ts:/price.ts
      - ./node_modules:/node_modules
      - ./tsconfig.json:/tsconfig.json
      - ./package.json:/package.json
    working_dir: /
    command: npx ts-node-dev price.ts

  balance:
    image: node:16
    container_name: kafka_example_balance
    volumes:
      - ./balance.ts:/balance.ts
      - ./node_modules:/node_modules
      - ./tsconfig.json:/tsconfig.json
      - ./package.json:/package.json
    working_dir: /
    command: npx ts-node-dev balance.ts
    env_file: '.env'

  zookeeper:
    container_name: kafka_example_zookeeper
    image: confluentinc/cp-zookeeper:7.2.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181

  kafka:
    container_name: kafka_example_kafka
    image: confluentinc/cp-kafka:7.2.2
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    links:
      - zookeeper
    # TODO configure retention time of events
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'

  console:
    container_name: kafka_example_console
    image: docker.redpanda.com/vectorized/console:master-173596f
    restart: on-failure
    environment:
      KAFKA_BROKERS: kafka:9092
    ports:
      - 8080:8080
    depends_on:
      - kafka